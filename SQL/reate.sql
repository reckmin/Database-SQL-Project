-------------------------------------------tables-------------------------------------------

CREATE TABLE RentalWebsite(
    website_id int GENERATED BY DEFAULT AS IDENTITY,
    website_name varchar(50) NOT NULL,
    website_email varchar(50) NOT NULL,
    PRIMARY KEY (website_id)
);


CREATE TABLE WebUser (
    user_id int, /*GENERATED BY DEFAULT AS IDENTITY,*/
    full_name varchar(50) NOT NULL,
    age int NOT NULL,
    gender varchar (1),
    email varchar(50) UNIQUE NOT NULL,
    phone_number varchar(20) NOT NULL,
    website_id int,
    PRIMARY KEY (user_id),
        FOREIGN KEY (website_id) REFERENCES RentalWebsite(website_id) ON DELETE CASCADE,
        CONSTRAINT check_age CHECK (age>=18)
);


CREATE TABLE Customer (
    customer_id int GENERATED BY DEFAULT AS IDENTITY,
    country varchar (20),
    user_id int,
    PRIMARY KEY (customer_id),
        CONSTRAINT WebUser_FK_cust FOREIGN KEY (user_id) REFERENCES WebUser(user_id) ON DELETE SET NULL
);


CREATE TABLE Rental_provider (
    provider_id int GENERATED BY DEFAULT AS IDENTITY,
    licence varchar (20) DEFAULT 'UKNOWN',
    user_id int,
    CHECK (licence in ('UNKNOWN', 'STANDARD', 'CERTIFICATED')),
    PRIMARY KEY (provider_id),
        CONSTRAINT WebUser_FK_pro FOREIGN KEY (user_id) REFERENCES WebUser(user_id) ON DELETE SET NULL
    
);


CREATE TABLE RentalCategory (
    category_id int GENERATED BY DEFAULT AS IDENTITY,
    main_category_id int,
    category_name varchar (30) NOT NULL,
    website_id int DEFAULT 1,
    CONSTRAINT RentCat_PM PRIMARY KEY (category_id),
        FOREIGN KEY (website_id) REFERENCES RentalWebsite(website_id) ON DELETE SET NULL,
        CONSTRAINT RentCat_FK_cat_id FOREIGN KEY (main_category_id) REFERENCES RentalCategory(category_id) ON DELETE SET NULL
);


CREATE TABLE InsuranceCompany (
    company_id int GENERATED BY DEFAULT AS IDENTITY,
    company_name varchar (60),
    PRIMARY KEY (company_id)
);


CREATE TABLE Insurance (
    insurance_id int GENERATED BY DEFAULT AS IDENTITY,
    insurance_type varchar (20) DEFAULT 'STANDARD',
    company_id int,
    PRIMARY KEY (insurance_id,company_id),
     FOREIGN KEY (company_id) REFERENCES InsuranceCompany (company_id) ON DELETE CASCADE,
     CHECK (insurance_type in ('STANDARD', 'STANDARD PLUS',  'FULL COVERAGE'))
);


CREATE TABLE Rental (
    rental_id int GENERATED BY DEFAULT AS IDENTITY,
    rental_name varchar (60) NOT NULL,
    rental_description varchar (200) NOT NULL,
    availibility varchar (20) DEFAULT 'AVAILABLE',
    price real NOT NULL,
    rating varchar(2) NOT NULL,
    category_id int,
    provider_id int,
    insurance_id int,
    company_id int,
    PRIMARY KEY (rental_id),
        CONSTRAINT RentalCat_FK_cat_id FOREIGN KEY (category_id) REFERENCES RentalCategory (category_id) ON DELETE SET NULL,
        CONSTRAINT RentalProvider_FK_provider_id FOREIGN KEY (provider_id) REFERENCES Rental_provider(provider_id) ON DELETE SET NULL,
        FOREIGN KEY (insurance_id, company_id) REFERENCES Insurance(insurance_id, company_id) ON DELETE SET NULL,
    CHECK (availibility in ('AVAILABLE', 'NOT AVAILABLE')), 
    CHECK (rating in ('5*', '4*', '3*', '2*', '1*'))
);


CREATE TABLE Contract (
    contract_id int GENERATED BY DEFAULT AS IDENTITY,
    contract_name varchar (30) NOT NULL,
    contract_price real NOT NULL,
    customer_id int,
    provider_id int,
    PRIMARY KEY (contract_id),
        FOREIGN KEY (customer_id) REFERENCES Customer(customer_id) ON DELETE CASCADE,
        FOREIGN KEY (provider_id) REFERENCES Rental_provider(provider_id) ON DELETE CASCADE
);


CREATE TABLE Includes (
    rental_id int,
    contract_id int,
    PRIMARY KEY (rental_id, contract_id),
       CONSTRAINT Rental_FK FOREIGN KEY (rental_id) REFERENCES Rental(rental_id) ON DELETE CASCADE,
       CONSTRAINT Contract_FK FOREIGN KEY (contract_id) REFERENCES Contract(contract_id) ON DELETE CASCADE
);


CREATE TABLE DurationOfRental (
    duration_id int GENERATED BY DEFAULT AS IDENTITY,
    d_date date NOT NULL,
    d_time varchar(10),
    rental_id int,
    contract_id int, 
    PRIMARY KEY (duration_id),
        FOREIGN KEY (rental_id, contract_id) REFERENCES Includes(rental_id,contract_id) ON DELETE CASCADE
      
);

----------------------Triger--------------------------------------

CREATE SEQUENCE seq_webUser
START WITH 1
INCREMENT BY 1
NOMAXVALUE
NOCYCLE;


CREATE OR REPLACE TRIGGER trig_user_id
    BEFORE INSERT ON webUser
    FOR EACH ROW 
BEGIN
    SELECT seq_webUser.NEXTVAL
    INTO :NEW.user_id
    FROM dual;
END;
/

----------------------Procedure--------------------------------------

CREATE OR REPLACE PROCEDURE p_delete_webuser(
   del_user_id  IN  WebUser.user_id%TYPE,
   u_error_code OUT NUMBER
)
AS
  BEGIN
    DELETE
    FROM WebUser
    WHERE del_user_id = WebUser.user_id;
 
    u_error_code := SQL%ROWCOUNT;
    IF (u_error_code = 1)
    THEN
      COMMIT;
    ELSE
      ROLLBACK;
    END IF;
    EXCEPTION
    WHEN OTHERS
    THEN
      u_error_code := SQLCODE;
  END p_delete_webuser;
/


CREATE OR REPLACE PROCEDURE p_delete_customer(
   del_customer_id  IN  Customer.customer_id%TYPE,
   u_error_code OUT NUMBER
)
AS
  BEGIN
    DELETE
    FROM Customer
    WHERE del_customer_id = Customer.customer_id;
 
    u_error_code := SQL%ROWCOUNT;
    IF (u_error_code = 1)
    THEN
      COMMIT;
    ELSE
      ROLLBACK;
    END IF;
    EXCEPTION
    WHEN OTHERS
    THEN
      u_error_code := SQLCODE;
  END p_delete_customer;
/



